@using System.Data.Objects.DataClasses
@using System.Reflection
@using TDPAdvertising.Web
@using System.Web.Script.Serialization
@model ExpressForms.ExpressFormsIndexViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>
    @Model.Title
</h1>

@{
    Html.RenderPartial("ExpressFormsFilterPartial", new ExpressForms.ExpressFormsFilterModel() { Filters = Model.Filters });
}

<div class='ExpressFormsTableContainer'>
    @Html.WriteStaticTable(Model.Title, Model.IndexHeader, new ExpressForms.ExpressFormsIndexRecord[] { } /* print no records until they are fetched using ajax */)
</div>

@Html.Hidden("hdnGetAjaxUrl", Model.GetAjaxUrl)

@Scripts.Render("~/Scripts/jquery.dataTables/jquery.dataTables.js")

<script>

$(document).ready(function () {
    var $table, visibleColumnIndices;
    $table = $('.ExpressFormsTableContainer').find('table').dataTable({
        "bProcessing": true,
        "bServerSide": true,
        "sAjaxSource": $('#hdnGetAjaxUrl').val(),
        "fnDrawCallback": function () {
            window.ef.resetButtonHandlers();
        },
        "fnServerParams": function (aoData, fnCallback) {
            aoData.push({ name: 'ef_Filter', value: JSON.stringify(ef.readFilterCriteria()) });
        }
    });
});
</script>